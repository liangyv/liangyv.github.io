(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{483:function(t,s,a){"use strict";a.r(s);var n=a(20),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h4",{attrs:{id:"web缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web缓存"}},[t._v("#")]),t._v(" web缓存")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("web缓存就是存在于客户端与服务器之间的一个副本、当你第一个发出请求后，缓存根据请求保存输出内容的副本\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("缓存的好处\n        （"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("）减少不必要的请求\n    （"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("）降低服务器的压力，减少服务器的消耗\n    （"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("）降低网络延迟，加快页面打开速度（直接读取浏览器的数据）\n\n")])])]),a("h4",{attrs:{id:"常见的web安全及防护原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见的web安全及防护原理"}},[t._v("#")]),t._v(" 常见的web安全及防护原理")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("sql注入原理：是将sql代码伪装到输入参数中，传递到服务器解析并执行的一种攻击手法。也就是说，\n            在一些对server端发起的请求参数中植入一些sql代码，server端在执行sql操作时，会拼接对应参数，\n            同时也将一些sql注入攻击的“sql”拼接起来，导致会执行一些预期之外的操作。\n\t\t防范："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("对用户输入进行校验\n\t\t       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("不适用动态拼接sql\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XSS")]),t._v("（跨站脚本攻击）：往web页面插入恶意的html标签或者js代码。\n\t\t        举例子：在论坛放置一个看是安全的链接，窃取cookie中的用户信息\n\t\t\t防范："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("尽量采用post而不使用"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v("提交表单\n\t\t\t      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("避免cookie中泄漏用户的隐式\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSRF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("跨站请求伪装）：通过伪装来自受信任用户的请求\n\t\t\t举例子：黄轶老师的webapp音乐请求数据就是利用"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSRF")]),t._v("跨站请求伪装来获取"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("QQ")]),t._v("音乐的数据\n\t\t\t防范：在客服端页面增加伪随机数，通过验证码\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XSS")]),t._v("和"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSRF")]),t._v("的区别：\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XSS")]),t._v("是获取信息，不需要提前知道其他用户页面的代码和数据包\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSRF")]),t._v("代替用户完成指定的动作，需要知道其他页面的代码和数据包\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);