(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{502:function(t,a,s){"use strict";s.r(a);var n=s(20),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"基本类型和引用类型的值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本类型和引用类型的值"}},[t._v("#")]),t._v(" 基本类型和引用类型的值")]),t._v(" "),s("p",[t._v("变量的数据类型：")]),t._v(" "),s("ol",[s("li",[t._v("基本类型：Undefined、Null、Boolean、Number、String")]),t._v(" "),s("li",[t._v("引用型：各种对象")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("基本类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("引用类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}})])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("包含")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Undefined、Null、Boolean、Number、String、Symbol（ES6新增）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Object（对象、数组、函数）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("访问方式")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("按值访问，操作实际变量中的值")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("按引用访问，操作对象的引用而不是实际对象")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("动态属性")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("不支持")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("支持动态增删改属性和方法")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("存储位置")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("栈中")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("对象存在堆中，指向对象的指针存在栈中")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("变量复制")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("栈中直接复制具体的值，新旧2个变量互不干扰")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("复制栈中的对象指针，但是堆中的对象是同一个，两个变量互相影响")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("参数传递")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("值传递，栈中的具体值")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("值传递，栈中的指针值（或者可以看做是引用传递）")])])])]),t._v(" "),s("p",[t._v("类型检测：")]),t._v(" "),s("ul",[s("li",[t._v("typeof，主要针对基本数据类型，对引用类型都是返回Object，函数和正则返回function")]),t._v(" "),s("li",[t._v("instanceof，主要针对引用类型，根据原型链识别")])]),t._v(" "),s("h3",{attrs:{id:"执行环境和作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行环境和作用域"}},[t._v("#")]),t._v(" 执行环境和作用域")]),t._v(" "),s("p",[t._v("在Web浏览器中，全局环境是window对象。")]),t._v(" "),s("p",[t._v("作用域链从最内层往最外层搜索。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//向上级搜索a变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("changeA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\ta "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("changeA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//显示"b"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//changeA内部的有a不会往上级继续搜索了")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("changeA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\ta "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("changeA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//显示"a"')]),t._v("\n")])])]),s("p",[t._v("延长作用域链：")]),t._v(" "),s("ol",[s("li",[t._v("try-catch语句的catch块")]),t._v(" "),s("li",[t._v("with语句")])]),t._v(" "),s("p",[t._v("没有块级作用域，这个和java&c/c++非常不同，特别注意，块中的定义不会在块结束后消失，特别是循环中。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//显示10，在java&c/c++中这时i是没有被定义的，会报错")]),t._v("\n")])])]),s("p",[t._v("避免这种问题，声明变量尽量用var主动声明，如果不用var直接写会挂载到全局变量上去")]),t._v(" "),s("h3",{attrs:{id:"垃圾收集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾收集"}},[t._v("#")]),t._v(" 垃圾收集")]),t._v(" "),s("p",[t._v("js跟java类似，是自动垃圾搜集，跟c/c++的手动收集不同。")]),t._v(" "),s("p",[t._v("垃圾搜集采用**标记清除(make and sweep)**方式进行。当变量进入环境就标记为“进入环境”，当变量离开环境的时候标记为“离开环境”。先标记内存中所有的变量，然后去掉环境中的变量和被环境中变量引用的变量，剩下的还有标记的删除。")]),t._v(" "),s("p",[t._v("早期netscape 3.0 采用的是**引用计数(reference counting)**的方式来回收垃圾，IE9.0前的BOM和DOM因为底层是COM组件（使用引用计数），引用计数会导致循环引用不被释放。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//最佳实践，不用的对象置为null，跟java一致")]),t._v("\na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("早期IE7之前，256个变量、4096个对象或者数组字面量和数组元素或者64k的字符串都会出发垃圾回收。IE7改成了如果垃圾回收例程回收的内存分配量低于15%就加倍，大于85%就回复默认值（跟IE6一样大）。在部分浏览器中可以手工触发垃圾回收，但是不建议这么做。")])])}),[],!1,null,null,null);a.default=e.exports}}]);