(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{509:function(t,a,s){"use strict";s.r(a);var e=s(20),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("DOM拓展有很多都是专有的，慢慢纳入规范。主要的扩展有2个：")]),t._v(" "),s("ol",[s("li",[t._v("Selectors API（选择符API）")]),t._v(" "),s("li",[t._v("HTML5")])]),t._v(" "),s("h3",{attrs:{id:"选择符api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选择符api"}},[t._v("#")]),t._v(" 选择符API")]),t._v(" "),s("p",[t._v("根据CSS选择符选择与某个模式匹配的DOM元素。")]),t._v(" "),s("blockquote",[s("p",[t._v("jQuery的核心就是通过CSS选择符查询DOM文档取得元素的引用。")])]),t._v(" "),s("p",[t._v("Selectors API Level1的核心是2个方法：")]),t._v(" "),s("ol",[s("li",[t._v("querySelector()")]),t._v(" "),s("li",[t._v("querySelectorAll()")])]),t._v(" "),s("p",[t._v("querySelector()方法")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//取得body元素")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" body "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//取得ID为a的元素")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" body "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//取得类为b的第一个元素")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" body "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//取得类为c的第一个图像元素")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" body "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"img.c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("通过Document调用querySelector()查询整个文档，如果通过具体的Element调用querySelector()则回回在该元素后代元素的范围内查询匹配")])]),t._v(" "),s("p",[t._v("querySelectorAll()方法")]),t._v(" "),s("p",[t._v("跟querySelector()类似，只是返回的是一个NodeList对象。")]),t._v(" "),s("p",[t._v("matchesSelector()方法")]),t._v(" "),s("p",[t._v("接受一个参数CSS选择符，如果调用元素与该选择符匹配返回true,否则返回false。")]),t._v(" "),s("blockquote",[s("p",[t._v("老的浏览器支持不是特别完善，注意做兼容性处理")])]),t._v(" "),s("h3",{attrs:{id:"元素遍历"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元素遍历"}},[t._v("#")]),t._v(" 元素遍历")]),t._v(" "),s("p",[t._v("因为元素建的空格是不是返回文本接口浏览器有不同。所以Element Traversal API 为DOM元素添加了一下5个属性：")]),t._v(" "),s("ol",[s("li",[t._v("childElementCount")]),t._v(" "),s("li",[t._v("firstElementChild")]),t._v(" "),s("li",[t._v("lastElementChild")]),t._v(" "),s("li",[t._v("previousElementSibling")]),t._v(" "),s("li",[t._v("nextElementSibling")])]),t._v(" "),s("h3",{attrs:{id:"html5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html5"}},[t._v("#")]),t._v(" HTML5")]),t._v(" "),s("p",[t._v("HTML5规范围绕如何使用新增标记定义了大量的JavaScript API。和DOM有一些重叠。")]),t._v(" "),s("p",[t._v("与类相关的扩充")]),t._v(" "),s("ol",[s("li",[t._v("getElementsByClassName()方法，参数是1个或多个类名字符串，返回NodeList")]),t._v(" "),s("li",[t._v("classList属性，用来应对多个类名操作其中部分的场景，集合类型是DOMTokenList")])]),t._v(" "),s("p",[t._v("DOMTokenList有length属性，可以用item()方法遍历，还有如果方法：")]),t._v(" "),s("ul",[s("li",[t._v("add(value)")]),t._v(" "),s("li",[t._v("contains(value)，是否存在给定值，返回true/false")]),t._v(" "),s("li",[t._v("remove(value)")]),t._v(" "),s("li",[t._v("toggle(value)，如果列表中已经存在给定值，删除它，如果没有，添加它。（开关方法）")])]),t._v(" "),s("p",[t._v("焦点管理")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" btn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"aButton"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("focus")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("activeElement "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasFocus")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("默认情况下，文档刚刚加载完document.activeElement保存的是document.body元素。加载期间document.activeElement的值为null")])]),t._v(" "),s("p",[t._v("HTMLDocument的变化")]),t._v(" "),s("p",[t._v("HTML5对HTMLDocument进行了拓展:")]),t._v(" "),s("ol",[s("li",[t._v("readyState属性。loading=正在加载，complete=已经加载完毕")]),t._v(" "),s("li",[t._v("compatMode属性。CSS1Compat=标准模式，BackCompat=混杂模式")]),t._v(" "),s("li",[t._v("head属性。")])]),t._v(" "),s("p",[t._v("字符集属性")]),t._v(" "),s("ol",[s("li",[t._v('charset属性。默认值是"UTF-16"')]),t._v(" "),s("li",[t._v("defaultCharset属性。浏览器及操作系统设置的默认字符集")])]),t._v(" "),s("p",[t._v("自定义数据属性")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("//自定义数据属性以“data-”开头\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("data-a")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("123"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v('\nvar div = document.getElementById("a");\nvar a = div.dataset.a; //取自定义属性\n')])])]),s("p",[t._v("插入标记")]),t._v(" "),s("ol",[s("li",[t._v("innerHTML属性。读出来就是HTML代码，写入的时候会转成HTML代码，但是各种浏览可能有细微差别")]),t._v(" "),s("li",[t._v("outerHTML属性。会包含当前元素的代码。其他跟innerHTML类似")]),t._v(" "),s("li",[t._v("insertAdacentHTML(pos, htmlCode)。")])]),t._v(" "),s("p",[t._v("insertAdacentHTML的pos只有以下取值：")]),t._v(" "),s("ul",[s("li",[t._v("beforebegin。当前元素之前插入一个紧邻的同级元素")]),t._v(" "),s("li",[t._v("afterbegin。当前元素之下插入一个子元素，排在子元素的第一个")]),t._v(" "),s("li",[t._v("beforeend。当前元素之下插入一个子元素，排在子元素组后一个")]),t._v(" "),s("li",[t._v("afterend。当前元素之后插入一个同级元素")])]),t._v(" "),s("blockquote",[s("p",[t._v("因为内存和性能问题，在插入元素之前，最好手工杉树要被替换的元素的所有事件处理程序和JS对象属性。")]),t._v(" "),s("p",[t._v("循环插入的话建议先构建html字符串一次性调用插入方法，而不是每次循环去插入")])]),t._v(" "),s("p",[t._v("scrollIntoView()方法")]),t._v(" "),s("p",[t._v("参数取值：")]),t._v(" "),s("ul",[s("li",[t._v("true/不传参数。让调用元素的顶部尽可能与视口顶部平齐")]),t._v(" "),s("li",[t._v("false。让调用元素尽可能全部出现，可能话底部与视口平齐")])]),t._v(" "),s("h3",{attrs:{id:"专有扩展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#专有扩展"}},[t._v("#")]),t._v(" 专有扩展")]),t._v(" "),s("p",[t._v("文档模式")]),t._v(" "),s("p",[t._v("IE8引入了一个“文档模式”(document mode)的概念。决定了页面可以使用什么功能，决定了使用哪个级别的CSS，可以用那些JS API以及如果对待doctype")]),t._v(" "),s("p",[t._v("chlidren属性")]),t._v(" "),s("p",[t._v("IE9之前的版本因为处理文本节点中的空白符有差异，所以有了这个属性，只包含元素的子节点。")]),t._v(" "),s("p",[t._v("contains()方法")]),t._v(" "),s("p",[t._v("IE引入了这个方法方便查找某个节点是不是调用节点的后代节点。")]),t._v(" "),s("blockquote",[s("p",[t._v("DOM Level3 compareDocumentPosition()也可以确认关系。返回一个掩码")]),t._v(" "),s("ul",[s("li",[t._v("1，无关")]),t._v(" "),s("li",[t._v("2，居前")]),t._v(" "),s("li",[t._v("4，居后")]),t._v(" "),s("li",[t._v("8，包含")]),t._v(" "),s("li",[t._v("16，被包含")])])]),t._v(" "),s("p",[t._v("插入文本")]),t._v(" "),s("p",[t._v("跟innerHTML和outerHTML类似，但是没有纳入规范，所以个人不建议用了吧")]),t._v(" "),s("ul",[s("li",[t._v("innerText")]),t._v(" "),s("li",[t._v("outerText")])]),t._v(" "),s("p",[t._v("滚动")]),t._v(" "),s("p",[t._v("也是没有被纳入H5规范的一些方法，一样最好没事别用了")]),t._v(" "),s("ul",[s("li",[t._v("scrollIntoViewIfNeeded(alignCenter)")]),t._v(" "),s("li",[t._v("scrollByLines(lineCount)")]),t._v(" "),s("li",[t._v("scrollByPages(pageCount)")])])])}),[],!1,null,null,null);a.default=n.exports}}]);