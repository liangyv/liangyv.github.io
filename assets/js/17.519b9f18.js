(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{428:function(a,t,e){"use strict";e.r(t);var l=e(20),r=Object(l.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h4",{attrs:{id:"js技巧总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js技巧总结"}},[a._v("#")]),a._v(" JS技巧总结")]),a._v(" "),e("h5",{attrs:{id:"日期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日期"}},[a._v("#")]),a._v(" 日期")]),a._v(" "),e("ul",[e("li",[a._v("日期时间戳\n"),e("ul",[e("li",[a._v("+new Date() = new Date().getTime()")])])])]),a._v(" "),e("h5",{attrs:{id:"数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[a._v("#")]),a._v(" 数组")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("类数组转数组")]),a._v(" "),e("ul",[e("li",[a._v("var arr  = Array.prototype.slice.call(arguments)")])])]),a._v(" "),e("li",[e("p",[a._v("连接类数组")]),a._v(" "),e("ul",[e("li",[a._v("Array.prototype.push.apply(arr,arguments)")])])]),a._v(" "),e("li",[e("p",[a._v("数组插入另一个数组的指定位置")]),a._v(" "),e("ul",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var a = [1,2,3,7,8,9];\nvar b = [4,5,6];\nvar insertIndex = 3;\na.splice.apply(a,Array.prototype.concat(insertIndex,0,b));\n")])])])])])]),a._v(" "),e("li",[e("p",[a._v("数组最大值和最小值")]),a._v(" "),e("ul",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("Math.max.apply(Math,[1,2,3])\nMath.min.apply(Math,[1,2,3])\n")])])])])])]),a._v(" "),e("li",[e("p",[a._v("截断数组和清空数组")]),a._v(" "),e("ul",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var arr = [1,2,3];\narr.length = 1;\nconsole.log(arr); //[1]\narr.length = 0;\nconsole.log(arr); //[]\narr.length = 5;\nconsole.log(arr); //[1,2,3,undefined,undefined]\n")])])])])])]),a._v(" "),e("li",[e("p",[a._v("数组深复制")]),a._v(" "),e("ul",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var a = [1,2,3];\nvar b = a.concat(); //a的深复制\n")])])])])])]),a._v(" "),e("li",[e("p",[a._v("数组元素删除")]),a._v(" "),e("ul",[e("li",[a._v("数组元素删除使用splice，不能使用delete，delete只是将元素置为undefined，对象属性删除 delete")])])]),a._v(" "),e("li",[e("p",[a._v("其他")]),a._v(" "),e("ul",[e("li",[a._v("获取数组末尾的m个元素  Array.prototype.slice(-m)")]),a._v(" "),e("li",[a._v("数组截断 array.length = m(m<array.length)")]),a._v(" "),e("li",[a._v("数组洗牌 array.sort(function(){Math.random - 0.5})")])])])]),a._v(" "),e("h5",{attrs:{id:"字符串"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[a._v("#")]),a._v(" 字符串")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("去除首尾空格")]),a._v(" "),e("ul",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('String.prototype.trim = function(){return thid.replace(/^\\s+|\\s+$/g," ")};\n')])])])])])]),a._v(" "),e("li",[e("p",[a._v("使用 + 将字符串转换成数字")]),a._v(" "),e("ul",[e("li",[a._v("+'123' = 123")])])])]),a._v(" "),e("h5",{attrs:{id:"随机数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#随机数"}},[a._v("#")]),a._v(" 随机数")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("从数组中随机获取成员")]),a._v(" "),e("ul",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var items = [12,52,'a',2,256,'foo',558,'doe',2145,4];\nvar randomItem = items[Math.floor(Math.random()*items.length)]\n")])])])])])]),a._v(" "),e("li",[e("p",[a._v("获取指定范围的随机数")]),a._v(" "),e("ul",[e("li",[a._v("var  x = Math.floor(Math.random()*(max-min+1))+min;")])])]),a._v(" "),e("li",[e("p",[a._v("生成随机码")]),a._v(" "),e("ul",[e("li",[a._v("Math.random().toString(16).substring(2);")]),a._v(" "),e("li",[a._v("Math.random().toString(36).substring(2);")])])]),a._v(" "),e("li",[e("p",[a._v("生成随机的字母和数字组成的字符串")])]),a._v(" "),e("li",[e("p",[a._v("对数字数组进行随机排序")]),a._v(" "),e("ul",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var numbers  [5,45,120,-215,100,1256,95];\nnumbers = numbers.sort(function(){return Math.random()-0.5})\n")])])])])])])]),a._v(" "),e("h4",{attrs:{id:"js数组类型转换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js数组类型转换"}},[a._v("#")]),a._v(" JS数组类型转换")]),a._v(" "),e("p",[a._v('​\tvar myVar = "3.14"')]),a._v(" "),e("ul",[e("li",[e("p",[a._v("转换为字符串")]),a._v(" "),e("ul",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('str = someObj.toString()\nstr = ""+myVar\n')])])])])])]),a._v(" "),e("li",[e("p",[a._v("转换为整型")]),a._v(" "),e("ul",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("int = ~~myVar 或 parseInt(myVar)\n")])])])])])]),a._v(" "),e("li",[e("p",[a._v("转换为浮点型")]),a._v(" "),e("ul",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("float = 1*myVar 或myVar-0 或parseFloat(myVar)\n")])])])])])]),a._v(" "),e("li",[e("p",[a._v("转换为布尔型")]),a._v(" "),e("ul",[e("li",[a._v("bool = !!myVar")]),a._v(" "),e("li",[a._v('在布尔运算时，false,undefined,null,0,"",默认转换为false')]),a._v(" "),e("li",[a._v("true,1,非空字符串，非空对象，默认转换为true")])])]),a._v(" "),e("li",[e("p",[a._v("转换为数组")]),a._v(" "),e("ul",[e("li",[a._v("array = [myVar]")])])]),a._v(" "),e("li",[e("p",[a._v("转换为日期")]),a._v(" "),e("ul",[e("li",[a._v("new Date(myVar)，日期字符串的格式必须为yy/MM/dd或 yy/MM/dd HH:mm:ss 形式，其他形式不行")])])]),a._v(" "),e("li",[e("p",[a._v("转换为正则表达式")]),a._v(" "),e("ul",[e("li",[a._v("new RegExp(myVar)，创建表达式要使用/pattern/flags的形式")])])])]),a._v(" "),e("h4",{attrs:{id:"js数据类型判断"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js数据类型判断"}},[a._v("#")]),a._v(" JS数据类型判断")]),a._v(" "),e("ul",[e("li",[e("h5",{attrs:{id:"typeof"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typeof"}},[a._v("#")]),a._v(" typeof")]),a._v(" "),e("ul",[e("li",[a._v("返回值为字符串，有6种类型：number、string、blloean、function、undefined、object")]),a._v(" "),e("li",[a._v("typeof通常用来区分undefined和function类型，无法分辨复杂类型，如array类型和plain object类型")]),a._v(" "),e("li",[a._v('用typeof(reValue) === "undefined"来区分undefined，布用reValue === undefined，是因为reValue未声明时，浏览器直接报错')]),a._v(" "),e("li",[a._v("用typeof(reValue) === 'function' 来检测function")]),a._v(" "),e("li",[a._v("typeof可以区分基本类型，函数类型，其他的具体对象类型全部归为对象类型")]),a._v(" "),e("li")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);