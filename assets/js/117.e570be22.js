(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{528:function(t,a,s){"use strict";s.r(a);var r=s(20),n=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"第1章-作用于是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第1章-作用于是什么"}},[t._v("#")]),t._v(" 第1章 作用于是什么？")]),t._v(" "),s("h5",{attrs:{id:"_1-1-编译原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-编译原理"}},[t._v("#")]),t._v(" 1.1 编译原理")]),t._v(" "),s("p",[t._v("JavaScript引擎编译的步骤与传统的编译语言类似。程序中的一段源代码在执行前会经历三个步骤，统称为'编译'。")]),t._v(" "),s("p",[t._v("分词/语法分析：（分解为词法单元）该过程会将由字符组成的字符串分解成有意义的代码块。而这个代码块被称为词法单元。对于空格是否是否会被当作词法单元，取决于空格在这门语言是否具有意义。")]),t._v(" "),s("p",[t._v("解析/语法分析：将词法单元流（数组）转换成一个由元素逐级嵌套所组成的代表了程序语法结构的树。这个树被称为“抽象语法树”。")]),t._v(" "),s("p",[t._v("代码生成：将AST(树)转换成可执行代码的过程。")]),t._v(" "),s("p",[t._v("分词和词法解析的主要差异在于语法单元的识别是通过有状态还是无状态的方式进行的。如果词法单元生成器在判断a是一个独立的词法单元还是其他语法单元的一部分时，调用的是有状态的解析规则，则这个过程被称为词法解析。")]),t._v(" "),s("h5",{attrs:{id:"_1-2-理解作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-理解作用域"}},[t._v("#")]),t._v(" 1.2 理解作用域")]),t._v(" "),s("p",[t._v("引擎——编译、执行，运行时处理")]),t._v(" "),s("p",[t._v("编译器——语法分析、代码生成，编译时处理")]),t._v(" "),s("p",[t._v("作用域——访问权限")]),t._v(" "),s("p",[t._v("将var a = 2分解，编译器会做如下处理：")]),t._v(" "),s("ul",[s("li",[t._v("先将这段程序分解为词法单元，再将词法单元解析为一个树结构。")]),t._v(" "),s("li",[t._v("查：找到的时候，忽略它，继续进行编译，否则就会声明。")]),t._v(" "),s("li",[t._v("生成代码并继续查找")])]),t._v(" "),s("p",[t._v("总结：变量的赋值操作会执行两个动作，首先编译器会在当前作用域中声明一个变量（若之前未声明过），然后在运行时引擎会在作用域中查找该变量，若能够找到就会对它赋值。")]),t._v(" "),s("p",[t._v("变量的赋值操作：如果之前没声明过这个变量，编译器则在当前作用域中声明一个变量，然后运行时，引擎会在作用域中查找该变量，如果能够找到则对它赋值。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//找到其中所有LHS查询")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//找到其中所有RHS查询")]),t._v("\n")])])]),s("p",[t._v("RHS查询：得到某某的值。LHS查询：找到变量容器的本身。 上题答案： "),s("code",[t._v("LHS：")]),t._v("c = .. 、a = 2 、b = .."),s("code",[t._v("RHS:")]),t._v("foo(2.. 、= a 、a .. 、..b`")]),t._v(" "),s("h5",{attrs:{id:"_1-3-作用域嵌套"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-作用域嵌套"}},[t._v("#")]),t._v(" 1.3 作用域嵌套")]),t._v(" "),s("p",[t._v("当一个块或函数嵌套在另一个块或函数中，就发生了作用域的嵌套。因此在当前域中无法找到某个变量时，引擎就会在外层嵌套的作用域中继续查找，直到找到该变量。")]),t._v(" "),s("h5",{attrs:{id:"_1-4-异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-异常"}},[t._v("#")]),t._v(" 1.4 异常")]),t._v(" "),s("p",[t._v("在变量还没有声明的情况下，这两种查询的行为不一样。 如果RHS查询在所有嵌套的作用域中找不到所需变量，引擎会抛出ReferenceError异常。 如果LHS查询在所有嵌套的作用域中找不到所需变量，就会在全局作用域中创建一个具有该名称的变量，并将其返还给引擎，前提是在非严格模式下。 ReferenceError同作用域判别失败相关，而TypeError则代表作用域判别成功了，但是对结果的操作是不合理的。")])])}),[],!1,null,null,null);a.default=n.exports}}]);